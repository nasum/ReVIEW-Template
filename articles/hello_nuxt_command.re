
= コマンド

//lead{
この章では@<ttb>{Nuxt.js}の開発で使用するコマンドや、プロダクション環境で使うためのコマンドを解説していきます。
//}

== nuxt

//cmd{
$ nuxt
//}

@<ttb>{nuxt}コマンドを単体で使用すると開発サーバーを起動します。開発サーバーはデフォルトでは@<ttb>{localhost:3000}で起動します。

このコマンドで実行したサーバーはソースコードに変更があるとホットリロードを行い即座に変更が反映されます。開発はこのコマンドからはじまります。頻繁なソースコードの更新を行うとうまく動かないことがあるので、その場合は一度開発サーバーを停止するとよいでしょう。

== nuxt build

//cmd{
$ nuxt build
//}

アプリケーションを@<ttb>{Webpack}でビルドします。@<ttb>{javaScript}と@<ttb>{CSS}をプロダクション用にビルドします。@<ttb>{.nuxt}にビルド結果を背馳します。

このコマンドは@<ttb>{nuxt start}のまえに実行する必要があります。本番にデプロイする前に実行するようにデプロイスクリプトに書くことになります。

== nuxt start

//cmd{
$ nuxt start
//}

プロダクションモードでサーバーを起動します。プロダクションモードでも@<ttb>{localhost:3000}で起動します。

== nuxt generate

//cmd{
$ nuxt generate
//}

@<ttb>{Nuxt.js}の特徴的な機能である静的ファイルジェネレータの機能を使う際に使用するコマンドです。@<ttb>{generate}で出力されたファイルは@<ttb>{dist}ディレクトリに出力されます。静的ファイルをデプロイする場合は@<ttb>{dist}ディレクトリに出力された成果物を使用します。

== まとめ

@<ttb>{Nuxt.js}のコマンドについて解説していきました。それぞれのコマンドについては@<ttb>{--help}オプションで細かい使い方の詳細確認することができます。

主に使用するコマンドは@<ttb>{package.json}の@<ttb>{script}に定義するとよいでしょう。